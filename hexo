# hexo 构建一个惊天页面的博客网站
https://hexo.io/zh-cn/

# 初始化命令
npm install hexo-cli -g
hexo init blog
cd blog
npm install
hexo server

# 安装git插件
npm install hexo-deployer-git --save

Step2. 修改 _config.yml 檔案的 Deployment 設定
接著是修改 _config.yml 設定檔中，有關 deploy 的設定。

需注意這裡指的 _config.yml 檔案是根目錄的，而不是 themes 主題中的。

deploy:
  type: git
  repo: https://github.com/username/username.github.io.git
  branch: master
type：選擇部屬模式，這裡填 git
repo：GitHub repository 的連結，記得將 username 修改成自己的帳號名稱
branch：選擇分支，預設為 master


Step3. 輸入部署指令
使用下列指令即可部署檔案到網站上，第一次輸入可能會要求登入 GitHub 帳號：

$ hexo deploy
通常在完成每次修改後，會依序輸入 clean -> generate -> deploy 三行指令，避免更新不完全：

$ hexo cl    // 清除之前建立的靜態檔案
$ hexo g     // 建立靜態頁面
$ hexo d     // 部署至 GitHub
或是合併第二、三行指令：hexo g -d 即可在產生靜態頁面後立刻部署。


1.修改package.json

在server命令中添加 -p 端口号 配置。 这时启动hexo就不能再用 hexo server 命令了，而是使用npm run server启动。这样端口号就改成4001了。

"scripts": {
 "build": "hexo generate",
 "clean": "hexo clean",
 "deploy": "hexo deploy",
 "server": "hexo server -p 4001"
},

2.修改启动文件

hexo的启动文件地址node_modules\hexo-server\index.js 修改port即可。
我这里把port改成了4001。这样再执行hexo server的时候，端口号就变成了4001

hexo.config.server = Object.assign({
 port: 4001,
 log: false,
 // `undefined` uses Node's default (try `::` with fallback to `0.0.0.0`)
 ip: undefined,
 compress: false,
 header: true
}, hexo.config.server);


hexo server -i 0.0.0.0 -p 4001
