# 编译参数的官方网站
https://llvm.org/docs/CMake.html

# llvm编译参数，编译出来全是*.a
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_TARGETS_TO_BUILD="X86;ARM" -DLLVM_ENABLE_PROJECTS="clang;lld" -DLLVM_ENABLE_ASSERTIONS=true -DCMAKE_BUILD_TYPE=Release

# 编译动态库
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON -DCMAKE_BUILD_TYPE=MinSizeRel

# 编译llvm-mctoll的库
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON -DCMAKE_BUILD_TYPE=MinSizeRel -DLLVM_ENABLE_PROJECTS="clang" -DLLVM_TARGETS_TO_BUILD="X86;ARM"

# 编译能够支持llvm-qemu的库
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_LINK_LLVM_DYLIB=ON -DCMAKE_BUILD_TYPE=MinSizeRel -DLLVM_ENABLE_PROJECTS="clang"  -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_FFI=ON

# 编译能够支持在arm上的llvm-qemu的库
cmake -S llvm -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_FFI=ON -DLLVM_ENABLE_TERMINFO=OFF

# llvm-qemu开启多线程jit的版本
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_BUILD_LLVM_DYLIB=ON   -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_TERMINFO=OFF -DLLVM_ENABLE_THREADS=ON

# 编译带Libc的
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_ENABLE_PROJECTS="clang;lld;libcxx;libcxxabi;libunwind" -DCMAKE_BUILD_TYPE=Release

# 删除make install安装后的文件
xargs rm -rf < install_manifest.txt

# 使用龙芯交叉编译器
cmake -S llvm -B build -G "Unix Makefiles" -DLLVM_BUILD_LLVM_DYLIB=ON -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE=mips.cmake

# 编译llvm带libcxx的命令
CC=clang CXX=clang++ cmake -S llvm -B build -G "Unix Makefiles"  -DLLVM_ENABLE_PROJECTS="libcxxabi;libcxx;libstdc++" -DCMAKE_BUILD_TYPE=Release -DLIBCXX_ENABLE_FILESYSTEM=ON

# 使用libcxxabi编译llvm
$ mkdir build && cd build
$ export CC=clang CXX=clang++
$ cmake -DLLVM_PATH=path/to/llvm \
        -DLIBCXX_CXX_ABI=libcxxabi \
        -DLIBCXX_CXX_ABI_INCLUDE_PATHS=path/to/libcxxabi/include \
        path/to/libcxx
 
# llvm-config链接静态库
llvm-config --link-static --libs

# 禁用内部指令的编译参数
-DLLVM_ENABLE_EXPENSIVE_CHECKS=OFF

# llvm提取没有链接的函数名
llvm-nm -g [*.o]

# 提取bc文件中的函数
llvm-extract -func-list=function_list.txt output.bc -o 3.bc
